# Generated by Django 2.0.6 on 2018-07-05 07:13

import base.models.channel
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.IntegerField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=10)),
                ('district', models.CharField(max_length=10, verbose_name='区域')),
                ('addr', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=30, null=True)),
                ('lat_lng', models.CharField(max_length=50)),
                ('precise', models.SmallIntegerField()),
                ('confidence', models.SmallIntegerField()),
                ('price', models.FloatField(default=0, verbose_name='起售价，不断更新')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='update time')),
            ],
            options={
                'db_table': 'cinema',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CinemaLM',
            fields=[
                ('id', models.IntegerField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=10)),
                ('district', models.CharField(max_length=10, verbose_name='区域')),
                ('addr', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=30, null=True)),
                ('lat_lng', models.CharField(max_length=50)),
                ('precise', models.SmallIntegerField()),
                ('confidence', models.SmallIntegerField()),
                ('price', models.FloatField(default=0, verbose_name='起售价，不断更新')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='update time')),
            ],
            options={
                'managed': False,
            },
            bases=(models.Model, base.models.channel.ChannelLM),
        ),
        migrations.CreateModel(
            name='CinemaMT',
            fields=[
                ('id', models.IntegerField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=10)),
                ('district', models.CharField(max_length=10, verbose_name='区域')),
                ('addr', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=30, null=True)),
                ('lat_lng', models.CharField(max_length=50)),
                ('precise', models.SmallIntegerField()),
                ('confidence', models.SmallIntegerField()),
                ('price', models.FloatField(default=0, verbose_name='起售价，不断更新')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='update time')),
            ],
            options={
                'managed': False,
            },
            bases=(models.Model, base.models.channel.ChannelMT),
        ),
        migrations.CreateModel(
            name='CinemaTB',
            fields=[
                ('id', models.IntegerField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=10)),
                ('district', models.CharField(max_length=10, verbose_name='区域')),
                ('addr', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=30, null=True)),
                ('lat_lng', models.CharField(max_length=50)),
                ('precise', models.SmallIntegerField()),
                ('confidence', models.SmallIntegerField()),
                ('price', models.FloatField(default=0, verbose_name='起售价，不断更新')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='update time')),
            ],
            options={
                'managed': False,
            },
            bases=(models.Model, base.models.channel.ChannelTB),
        ),
        migrations.CreateModel(
            name='MatchCinemaLM2MT',
            fields=[
                ('id_mt', models.IntegerField(primary_key=True, serialize=False, verbose_name='id_mt')),
                ('id_matched', models.IntegerField(help_text='匹配上的id')),
                ('match_type', models.IntegerField(help_text='匹配方式 1:phone, 2:address, 4:name')),
                ('match_score', models.FloatField(help_text='匹配score, 介于0到1之间')),
                ('match_step', models.IntegerField(help_text='此结果是在哪一匹配step中形成')),
                ('is_delete', models.IntegerField()),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='update time')),
            ],
            options={
                'db_table': 'match_cinema_lm2mt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MatchCinemaTB2MT',
            fields=[
                ('id_mt', models.IntegerField(primary_key=True, serialize=False, verbose_name='id_mt')),
                ('id_matched', models.IntegerField(help_text='匹配上的id')),
                ('match_type', models.IntegerField(help_text='匹配方式 1:phone, 2:address, 4:name')),
                ('match_score', models.FloatField(help_text='匹配score, 介于0到1之间')),
                ('match_step', models.IntegerField(help_text='此结果是在哪一匹配step中形成')),
                ('is_delete', models.IntegerField()),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='create time')),
                ('update_time', models.DateTimeField(auto_now=True, db_column='update_time', verbose_name='update time')),
            ],
            options={
                'db_table': 'match_cinema_tb2mt',
                'managed': False,
            },
        ),
    ]
